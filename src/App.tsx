import { useRef, useState } from 'react';
import Barcode from 'react-barcode';

const App = () => {
  const [digits, setDigits] = useState([0, 0, 0, 1]);
  const digitsRef = useRef<(HTMLInputElement | null)[]>([]);

  return (
    <main className="flex flex-col items-center gap-6">
      <div className="flex items-center gap-2">
        <svg className="w-12 aspect-square" viewBox="0 0 700 700">
          <path d="m327.8.5-8.9.9c-4.7.4-9.5.8-10.5 1l-7.9 1.2a110.7 110.7 0 0 0-12 1.8A355.4 355.4 0 0 0 82.9 124 354.2 354.2 0 0 0 11 263 312.8 312.8 0 0 0 .5 350.5a298.4 298.4 0 0 0 6.9 71A364.3 364.3 0 0 0 26.3 483a355 355 0 0 0 99.3 135.5 390 390 0 0 0 73.9 47.4 391.8 391.8 0 0 0 73.9 25.7l12.1 2.4c6.2 1.2 9.5 1.7 15.4 2.6l7.1 1a430.9 430.9 0 0 0 97.5-2 318 318 0 0 0 30.3-6.2 424.3 424.3 0 0 0 52.2-17.9 350.7 350.7 0 0 0 105.9-70.9c8.3-8.1 12.1-12.2 25.2-27a373.9 373.9 0 0 0 46.3-72.1c11-23.1 21.9-54.1 26.2-75a744.1 744.1 0 0 0 7.1-44.5c.8-7 1-54.7.2-61l-1.4-13c-.3-3.6-.8-7.2-1-8-.2-.8-.7-3.5-1-6-.4-2.5-1-6.3-1.5-8.5l-1.5-7.2c-4-23.3-15.6-56.6-28.9-83.3a335.5 335.5 0 0 0-65.6-91.1 244.9 244.9 0 0 0-36.4-32.3A344.2 344.2 0 0 0 405.5 4.4l-6.5-1-8-1c-3.6-.3-7.8-.8-9.5-1.1-3.3-.5-53.1-1.3-53.7-.8zm45.2 21c5.8.3 11.6.8 13 .9A341.5 341.5 0 0 1 478.8 47a332.8 332.8 0 0 1 86.1 53.5c9.5 8.2 26.5 25.3 33.4 33.5 4 4.7 7.4 8.7 7.8 9 1.5 1.4 13.7 18.1 18.8 25.8a298.3 298.3 0 0 1 19.9 34.7 325.7 325.7 0 0 1 31.8 103l1 7.5c2.2 16.8 2.2 52.2-.1 71.5l-.9 7.5c-4.3 37.2-19 81.6-38.5 116.5a391.6 391.6 0 0 1-33.1 48.9 364.1 364.1 0 0 1-56.7 54.5 574 574 0 0 1-29.8 20.1c-10 6.2-34.3 18.2-46 22.8a344.8 344.8 0 0 1-86.5 21.7c-1 .6-27 1.8-36 1.8a309 309 0 0 1-71.5-7.7l-6.5-1.5a336 336 0 0 1-136-69.8c-6.7-5.7-30-29-35.9-35.8-6.9-8-23.3-30.3-28.8-39-5-8-18.3-31.8-18.3-32.8a344.4 344.4 0 0 1-29.6-99.2l-.9-7.5a393.5 393.5 0 0 1 0-72l1-8 1-7 1-6.5a330 330 0 0 1 57.5-135c3.9-5.7 3.4-5 9.7-13a394.3 394.3 0 0 1 49.9-50.2 334.8 334.8 0 0 1 164.2-70.9c2.6-.2 5.8-.7 7.2-1 1.4-.2 8.1-.7 15-1l12.7-.8c.4-.3 22.1.3 31.3.9z"></path>
          <path d="M342.4 147.5a84.5 84.5 0 0 0-69.1 79.9c-.3 5-.8 9.4-1.2 9.7-.3.3-3.7 1.4-7.6 2.3a101.6 101.6 0 0 0-71.9 64.7 100.8 100.8 0 0 0 90.6 133.5c12.3.5 17.3-1.1 18.7-6.1 1.3-4.8.6-8.5-2.3-11.4-2.3-2.3-3.5-2.5-14.3-3.2a136 136 0 0 1-16.3-1.8 92.6 92.6 0 0 1-14.5-5.1c-.5-.4-3.5-2.1-6.6-3.7a83.6 83.6 0 0 1-8-4.9 157.4 157.4 0 0 1-18.1-18.5 84.9 84.9 0 0 1-12.1-25.9l-1.2-6c-1.3-6.3-.8-20.1 1.1-30.5a78.9 78.9 0 0 1 35.2-51.2c12.3-7.3 23.5-10.5 45.7-12.9 3.3-.3 6.1-.7 6.3-.8.1-.2-.3-2.7-.8-5.7-4.4-22.3-2.3-38.4 6.9-52.6a63.7 63.7 0 0 1 57.1-30.8 63.6 63.6 0 0 1 61.5 63.9l.4 12.7c.1.9 1.2 2.8 2.6 4.3 3.2 3.5 10.1 3.7 13.3.3 3.6-3.8 4.2-7.2 3.8-20.5a64.1 64.1 0 0 0-3.3-21.8 84 84 0 0 0-16.2-29.3 85.1 85.1 0 0 0-79.7-28.6z"></path>
          <path d="M344.3 298.4a11 11 0 0 0-5 3.6c-1.7 2.4-1.8 9.8-1.8 132.5 0 141.6-.3 134.9 5.7 137.8 5.8 2.8 14.6-1.7 14.9-7.6l.3-39.7a407 407 0 0 1 1.5-43.5c5-23.6 24-38.6 54.6-43 13.9-1.9 21.3-5 21.6-8.8l.4-3.2c.8-3.8-1.7-8.4-5.4-10.1-5-2.4-23.6-1.3-35.6 2.2a82.9 82.9 0 0 0-31.6 16.6 51.2 51.2 0 0 1-5 3.8c-.2 0-.4-28.7-.4-63.8.1-35-.3-65.7-.7-68.2-1.4-7.8-6.5-11-13.5-8.6z"></path>
        </svg>
        <h1 className="font-semibold leading-none text-2xl">
          Parkrun
          <br />
          Barcodes
        </h1>
      </div>
      <Barcode value={`P${digits.join('')}`} width={3} height={100} />
      <div className="flex gap-2">
        {digits.map((_, idx) => (
          <input
            ref={(ref) => digitsRef.current.push(ref)}
            key={`digit-${idx}`}
            type="number"
            maxLength={1}
            className="w-8 p-2 border border-slate-500 rounded-md text-center"
            value={digits[idx].toString()}
            pattern="[0-9]*"
            onKeyDown={(e) => {
              let digit = Number(e.key);
              if (e.key === 'Backspace') digit = 0;
              if (!Number.isNaN(digit)) {
                setDigits((s) => {
                  const newDigits = [...s];
                  newDigits[idx] = digit;
                  return newDigits;
                });
              }
            }}
            onChange={() => {
              digitsRef.current[(idx + 1) % 4]?.focus();
            }}
          />
        ))}
      </div>
    </main>
  );
};

export default App;
